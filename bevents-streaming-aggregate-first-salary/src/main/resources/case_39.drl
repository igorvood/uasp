package ru.vtb.uasp.validate;

global org.slf4j.Logger logger

import scala.Some
import ru.vtb.uasp.common.dto.UaspDto
import ru.vtb.uasp.validate.entity.ValidateMsg
import ru.vtb.uasp.mutator.configuration.drools.DrlHelper
import java.util.Arrays

import ru.vtb.uasp.mutator.service.dto.*

dialect "mvel"

rule "1st Pos transaction for client"
when
    UaspDto($isPos:dataBoolean.get("is_pos"), DrlHelper.isNonEmpty($isPos) && $isPos.get==true )
    and
    UaspDto($count:dataInt.get("COUNT_POS"), DrlHelper.isNonEmpty($count) && $count.get==0)

then
    insert(new UaspOperation(drools.getRule().getName(), new StringMap("RTO_First_POS_39New_case"), "system-classification",new ConcatenateStr(",")))
    insert(new UaspOperation(drools.getRule().getName(), new BooleanMap(true), "system_is_update_pos", new Add()))
    insert(new UaspOperation(drools.getRule().getName(), new StringMap("Y"), "FIRST_CLIENT_POS_FLG", new Add()))
end

rule "1st Pos transaction for card"
when
    UaspDto($isPos:dataBoolean.get("is_pos"), DrlHelper.isNonEmpty($isPos) && $isPos.get==true )
    and
    UaspDto($countCard:dataInt.get("COUNT_POS_CARD"), DrlHelper.isNonEmpty($countCard) && $countCard.get==0)
    and
    UaspDto($posFlg:dataString.get("pos_flg"), DrlHelper.isNonEmpty($posFlg) && $posFlg.get=="N")
    and
    UaspDto($count:dataInt.get("COUNT_POS"), DrlHelper.isNonEmpty($count) && $count.get!=0)

then
    insert(new UaspOperation(drools.getRule().getName(), new StringMap("RTO_First_POS_39New_case"), "system-classification", new ConcatenateStr(",")))
    insert(new UaspOperation(drools.getRule().getName(), new BooleanMap(true), "system_is_update_pos", new Add()))
    insert(new UaspOperation(drools.getRule().getName(), new StringMap("N"), "FIRST_CLIENT_POS_FLG", new Add()))
end

rule "Nst Pos transaction"
when
    UaspDto($isPos:dataBoolean.get("is_pos"), DrlHelper.isNonEmpty($isPos) && $isPos.get==true )
    and
    (
    UaspDto($count:dataInt.get("COUNT_POS_CARD"), DrlHelper.isNonEmpty($count) && $count.get!=0)
    or
    UaspDto($posFlg:dataString.get("pos_flg"), DrlHelper.isNonEmpty($posFlg) && $posFlg.get=="Y")
    )

then
    insert(new UaspOperation(drools.getRule().getName(), new BooleanMap(true), "system_is_update_pos",new Add()))

end
