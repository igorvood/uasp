package ru.vtb.uasp.validate;

global org.slf4j.Logger logger

import scala.Some
import ru.vtb.uasp.common.dto.UaspDto
import ru.vtb.uasp.validate.entity.ValidateMsg
import ru.vtb.uasp.mutator.configuration.drools.DrlHelper
import java.util.Arrays

import ru.vtb.uasp.mutator.service.dto.*

dialect "mvel"

rule "pension count < 1"
when

    UaspDto($isPens:dataBoolean.get("is_pension"), DrlHelper.isNonEmpty($isPens) && $isPens.get==true )
    and
    UaspDto($count:dataInt.get("COUNT_PENS"), DrlHelper.isNonEmpty($count) && $count.get<1)
    and
    (
        (
            UaspDto($dttm_last:dataLong.get("DATE_LAST_PENS"), DrlHelper.isNonEmpty($dttm_last) && $dttm_last.get !=0)
            and
            UaspDto($dttm:dataLong.get("event_dttm"), ($dttm.get-$dttm_last.get)<15552000000L)
        )
        or
        UaspDto($dttm_last:dataLong.get("DATE_LAST_PENS"), DrlHelper.isNonEmpty($dttm_last) && $dttm_last.get ==0)
    )

then
    int count = $count.get+1
    insert(new UaspOperation(drools.getRule().getName(), new StringMap("RTO_First_pension_57_case"), "system-classification", new ConcatenateStr(",")))
    insert(new UaspOperation(drools.getRule().getName(), new IntMap(count), "EVENT_CNT", new Add()))
    insert(new UaspOperation(drools.getRule().getName(), new BooleanMap(true), "system_is_update_pens", new Add()))

end


rule "pension count is N and event time less then 6 month"
when
    UaspDto($isPens:dataBoolean.get("is_pension"), DrlHelper.isNonEmpty($isPens) && $isPens.get==true )
    and
    UaspDto($count:dataInt.get("COUNT_PENS"), DrlHelper.isNonEmpty($count) && $count.get>=1)
    and
    UaspDto($dttm_last:dataLong.get("DATE_LAST_PENS"), DrlHelper.isNonEmpty($dttm_last))
    and
    UaspDto($dttm:dataLong.get("event_dttm"), ($dttm.get-$dttm_last.get)<15552000000L)

then
    insert(new UaspOperation(drools.getRule().getName(), new BooleanMap(true), "system_is_update_pens", new Add()))

end


rule "pension count is N and event time more then 6 month"
when
    UaspDto($isPens:dataBoolean.get("is_pension"), DrlHelper.isNonEmpty($isPens) && $isPens.get==true )
    and
    UaspDto($dttm_last:dataLong.get("DATE_LAST_PENS"), DrlHelper.isNonEmpty($dttm_last) && $dttm_last.get != 0)
    and
    UaspDto($dttm:dataLong.get("event_dttm"), ($dttm.get-$dttm_last.get)>=15552000000L)

then
    insert(new UaspOperation(drools.getRule().getName(), new StringMap("RTO_First_pension_57_case"), "system-classification", new ConcatenateStr(",")))
    insert(new UaspOperation(drools.getRule().getName(), new IntMap(1), "EVENT_CNT", new Add()))
    insert(new UaspOperation(drools.getRule().getName(), new BooleanMap(true), "system_is_update_pens", new Add()))

end

