package ru.vtb.uasp.validate;

global org.slf4j.Logger logger

import scala.Some
import ru.vtb.uasp.common.dto.UaspDto
import ru.vtb.uasp.validate.entity.ValidateMsg
import ru.vtb.uasp.mutator.configuration.drools.DrlHelper
import java.util.Arrays
import ru.vtb.bevent.first.salary.aggregate.Util.DrlCaseHelper


import ru.vtb.uasp.mutator.service.dto.*

dialect "mvel"

rule "44 case"
when
    UaspDto($isWithdraw:dataBoolean.get("is_withdraw"), DrlHelper.isNonEmpty($isWithdraw) && $isWithdraw.get==true )
    and
    UaspDto($amount_transaction:dataDecimal.get("sourceSumRub"), DrlHelper.isNonEmpty($amount_transaction))
    and
    UaspDto($amount:dataDecimal.get("AMOUNT_ALL"), DrlHelper.isNonEmpty($amount) && DrlCaseHelper.isCase44($amount_transaction.get.toString, $amount.get.toString))
    and
    UaspDto($dttm_since:dataLong.get("FIRST_DAYS_FOR_LAST_DAYS"), DrlHelper.isNonEmpty($dttm_since) && $dttm_since.get != 0 )
    and
    UaspDto($event_dttm:dataLong.get("event_dttm"), DrlHelper.isNonEmpty($event_dttm))

then
    double partSum = DrlCaseHelper.calculateCase44($amount_transaction.get.toString, $amount.get.toString)

    insert(new UaspOperation(drools.getRule().getName(), new LongMap(DrlCaseHelper.millisToHour($event_dttm.get - $dttm_since.get)), "DELAY_TIME", new Add()))
    insert(new UaspOperation(drools.getRule().getName(), new DoubleMap(partSum), "PART_SUMM", new Add()))
    insert(new UaspOperation(drools.getRule().getName(), new StringMap("RTO_44_case"), "system-classification", new Add()))
    insert(new UaspOperation(drools.getRule().getName(), new StringMap("731500-01"), "kbo", new Add()))
    insert(new UaspOperation(drools.getRule().getName(), new BooleanMap(true), "system_is_clear_state_44_case", new Add()))

end


