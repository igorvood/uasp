package ru.vtb.uasp.validate;

global org.slf4j.Logger logger

import scala.Some
import ru.vtb.uasp.common.dto.UaspDto
import ru.vtb.uasp.validate.entity.ValidateMsg
import ru.vtb.uasp.mutator.configuration.drools.DrlHelper
import java.util.Arrays

import ru.vtb.uasp.mutator.service.dto.*

dialect "mvel"

rule "Exchange fields name unification from UDDS pipeline"
salience 10

when
    UaspDto($transactionCurrency:dataString.get("goalCurrency"), DrlHelper.isNonEmpty($transactionCurrency) && $transactionCurrency.get != "RUB")
    and
    UaspDto($transactionDatetime:dataLong.get("eventDttm"), DrlHelper.isNonEmpty($transactionDatetime))

then
    long dttm = $transactionDatetime.get
    String currency = $transactionCurrency.get

    insert(new UaspOperation(drools.getRule().getName(), new StringMap(currency), "exchange_currency", new Add()))
    insert(new UaspOperation(drools.getRule().getName(), new LongMap(dttm), "exchange_dttm", new Add()))
end

rule "Exchange fields name unification from UDDS pipeline RUB to RUR"
salience 10
when
    UaspDto($transactionCurrency:dataString.get("goalCurrency"), DrlHelper.isNonEmpty($transactionCurrency) && $transactionCurrency.get == "RUB")
    and
    UaspDto($transactionDatetime:dataLong.get("eventDttm"), DrlHelper.isNonEmpty($transactionDatetime))

  then
  long dttm = $transactionDatetime.get
  String currency = 'RUR'

   insert(new UaspOperation(drools.getRule().getName(), new StringMap(currency), "exchange_currency", new Add()))
   insert(new UaspOperation(drools.getRule().getName(), new LongMap(dttm), "exchange_dttm", new Add()))

end
