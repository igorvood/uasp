package ru.vtb.uasp.validate;

global org.slf4j.Logger logger

import ru.vtb.uasp.common.dto.UaspDto
import ru.vtb.uasp.validate.entity.ValidateMsg

dialect "mvel"


// Идентификатор клиента должен быть обязательно
rule "The  ID must be mandatory"
  when
   UaspDto($type:id, $type == null || $type.isEmpty())
  then
    insert(new ValidateMsg(drools.getRule().getName()))
end

// Дата операции обязательное поле
rule "The  msgid must be mandatory"
  when
   UaspDto(dataString.get("msgid").isEmpty)
  then
    insert(new ValidateMsg(drools.getRule().getName()))
end

// Сумма операции обязательное поле
rule "The transaction amount must be mandatory"
  when
   UaspDto(dataDecimal.get("transaction_amt").isEmpty)
  then
    insert(new ValidateMsg(drools.getRule().getName()))
end

rule "The card_number  must be mandatory"
  when
   UaspDto(dataString.get("card_number").isEmpty)
  then
    insert(new ValidateMsg(drools.getRule().getName()))
end

rule "The transaction_currency_cd must be mandatory"
  when
   UaspDto(dataInt.get("transaction_currency_cd").isEmpty)
  then
    insert(new ValidateMsg(drools.getRule().getName()))
end

// тип счета  обязательное поле
rule "The typ type must be mandatory"
  when
   UaspDto(dataInt.get("typ").isEmpty)
  then
    insert(new ValidateMsg(drools.getRule().getName()))
end

// система источник обязательное поле
rule "The system source  must be mandatory"
  when
   UaspDto(dataString.get("source_system_prf_auth").isEmpty)
  then
    insert(new ValidateMsg(drools.getRule().getName()))
end

//TODO
/*
rule "The card number  must be contains *"
  when
   UaspDto($card_number:dataString.get("card_number"), !$card_number.get.contains('*'))
  then
    insert(new ValidateMsg(drools.getRule().getName()))
end*/
